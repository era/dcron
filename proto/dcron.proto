syntax = "proto3";


option go_package = "github.com/era/dcron/services/dcron";


package dcron;


// Needs better name
service Public {
  rpc NewJob (JobRequest) returns (JobResponse) {}
  rpc GetJob (JobStatusRequest) returns (JobStatusResponse) {}
}

service Internal {
  rpc ExecuteJob(ExecutionJobRequest) returns (ExecutionJobResponse) {}
}

enum ScriptType {
  PYTHON = 0;
  RUBY = 1;
}

message JobRequest {
  string time = 1;
  ScriptType job_type = 2;
  string location = 3;
  string name = 4;
  int32 timeout = 5;
  bool update_if_exists = 6; 
  
}

message JobResponse {
  string name = 1;
  int32 error_code = 2;
  string error_message = 3;
}

message JobStatusRequest {
  string name = 1;
}

enum ExecutionStatus {
  RUNNING = 0;
  TIMEOUT = 1;
  FAILED = 2;
  SUCCEEDED = 3;
}

message Execution {
  uint64 executed_at = 1;
  string log = 2;
  int32 exit_code = 3;
  ExecutionStatus status = 4;
  
}

message JobStatusResponse {
  int32 error_code = 1;
  ScriptType job_type = 2;
  string location = 3;
  string name = 4;
  int32 timeout = 5;
  string time = 6;
  repeated Execution executions = 7;
}

message ExecutionJobRequest {
  ScriptType job_type = 1;
  string location = 2;
  string name = 3;
  int32 timeout = 4;
}

enum ExecutionJobAck {
  ACCEPTED = 0;
  REJECTED = 1;
}

message ExecutionJobResponse {
  ExecutionJobAck status = 1;
}
